{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/StateInfo.js\";\nimport React, { useState } from \"react\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Landing />} />\n//         <Route path=\"/state\" element={<stateInfo />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\nconst StateInfo = () => {\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, \"location.state.stateCode\");\n  //   const [selectedState, setSelectedState] = useState(\"\");\n  //   const { loading, error, data } = useQuery(GET_STATE_DATA, {\n  //     variables: { stateCode: selectedState },\n  //   });\n  //   if (loading) return <p>Loading...</p>;\n\n  //   if (error) return <p>Error: {error.message}</p>;\n  //   if (data && data.usaMapData) {\n  //     return (\n  //       <div className=\"landing-page-container\">\n  //         <h1>STATE INFORMATION</h1>\n  //         <ul>\n  //           <li key={data.usaMapData.id}>\n  //             <p>StateName: {data.usaMapData.name}</p>\n  //             <p>StateCode: {data.usaMapData.stateCode}</p>\n  //           </li>\n  //         </ul>\n  //         <div className=\"header-link-container\">\n  //           <Link to=\"/\" className=\"header-link\">\n  //             Back to State Selector\n  //           </Link>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n};\n\nexport default StateInfo;","map":{"version":3,"names":["React","useState","useQuery","gql","Link","GET_STATE_DATA","StateInfo","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/StateInfo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/\" element={<Landing />} />\n//         <Route path=\"/state\" element={<stateInfo />} />\n//       </Routes>\n//     </Router>\n//   );\n// };\n\nconst StateInfo = () => {\n  return <h1>location.state.stateCode</h1>;\n  //   const [selectedState, setSelectedState] = useState(\"\");\n  //   const { loading, error, data } = useQuery(GET_STATE_DATA, {\n  //     variables: { stateCode: selectedState },\n  //   });\n  //   if (loading) return <p>Loading...</p>;\n\n  //   if (error) return <p>Error: {error.message}</p>;\n  //   if (data && data.usaMapData) {\n  //     return (\n  //       <div className=\"landing-page-container\">\n  //         <h1>STATE INFORMATION</h1>\n  //         <ul>\n  //           <li key={data.usaMapData.id}>\n  //             <p>StateName: {data.usaMapData.name}</p>\n  //             <p>StateCode: {data.usaMapData.stateCode}</p>\n  //           </li>\n  //         </ul>\n  //         <div className=\"header-link-container\">\n  //           <Link to=\"/\" className=\"header-link\">\n  //             Back to State Selector\n  //           </Link>\n  //         </div>\n  //       </div>\n  //     );\n  //   }\n};\n\nexport default StateInfo;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,aAAa;;AAEpB;;AAEA,MAAMC,cAAc,GAAGF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMG,SAAS,GAAGA,CAAA,KAAM;EACtB,oBAAON,KAAA,CAAAO,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,0BAA4B,CAAC;EACxC;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED,eAAeP,SAAS"},"metadata":{},"sourceType":"module"}