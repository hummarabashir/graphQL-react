{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js\";\n// import React from \"react\";\n// import { ApolloProvider } from \"@apollo/client\";\n// import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n// // import App from \"./App.js\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n//   cache: new InMemoryCache(),\n// });\n\n// const CApp = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <h1>hello</h1>\n//     </ApolloProvider>\n//   );\n// };\n\n// export default CApp;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\n\n// import App from \"./App.js\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\nconst GET_STATE_DATA = gql`\n  query GetStateData {\n    usaMapData(stateCode: \"AZ\") {\n      id\n      name\n    }\n  }\n`;\nconst handleMapClick = event => {\n  alert(\"hello\");\n};\nfunction CApp() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STATE_DATA);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Name: \", data.usaMapData.name))), /*#__PURE__*/React.createElement(USAMap, {\n    onClick: alert(\"hello\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: handleMapClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","ApolloClient","ApolloProvider","useQuery","gql","USAMap","client","uri","GET_STATE_DATA","handleMapClick","event","alert","CApp","loading","error","data","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","key","id","usaMapData","name","onClick","render","document","getElementById"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js"],"sourcesContent":["// import React from \"react\";\n// import { ApolloProvider } from \"@apollo/client\";\n// import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n// // import App from \"./App.js\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n//   cache: new InMemoryCache(),\n// });\n\n// const CApp = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <h1>hello</h1>\n//     </ApolloProvider>\n//   );\n// };\n\n// export default CApp;\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\n\n// import App from \"./App.js\";\n\nconst client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData {\n    usaMapData(stateCode: \"AZ\") {\n      id\n      name\n    }\n  }\n`;\nconst handleMapClick = (event) => {\n  alert(\"hello\");\n};\n\nfunction CApp() {\n  const { loading, error, data } = useQuery(GET_STATE_DATA);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <ul>\n        {/* {data.usaMapData.map((user) => ( */}\n        <li key={data.id}>\n          <p>Name: {data.usaMapData.name}</p>\n        </li>\n        {/* ))} */}\n      </ul>\n      <USAMap onClick={alert(\"hello\")} />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <ApolloProvider client={handleMapClick}>\n    <CApp />\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}