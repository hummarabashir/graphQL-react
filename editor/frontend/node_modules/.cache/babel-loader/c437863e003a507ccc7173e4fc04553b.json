{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./index.css\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\nconst App = () => {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(Landing, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/state\",\n    element: /*#__PURE__*/React.createElement(\"stateInfo\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n};\nconst Landing = () => {\n  const [selectedState, setSelectedState] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STATE_DATA, {\n    variables: {\n      stateCode: selectedState\n    }\n  });\n  const mapHandler = event => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (data && data.usaMapData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"GraphQL State Explorer National Map\"), /*#__PURE__*/React.createElement(USAMap, {\n      onClick: mapHandler,\n      defaultFill: \"rgb(247, 166, 15)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  }\n};\nconst stateInfo = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"STATE INFORMATION\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: data.usaMapData.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"StateName: \", data.usaMapData.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"StateCode: \", data.usaMapData.stateCode))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-link-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"header-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Back to State Selector\")));\n};\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"names":["React","useState","ReactDOM","ApolloClient","ApolloProvider","useQuery","gql","USAMap","Link","BrowserRouter","Router","Routes","Route","client","uri","GET_STATE_DATA","App","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Landing","selectedState","setSelectedState","loading","error","data","variables","stateCode","mapHandler","event","target","dataset","name","message","usaMapData","className","onClick","defaultFill","stateInfo","key","id","to","render","document","getElementById"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nconst client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"/state\" element={<stateInfo />} />\n      </Routes>\n    </Router>\n  );\n};\n\nconst Landing = () => {\n  const [selectedState, setSelectedState] = useState(\"\");\n  const { loading, error, data } = useQuery(GET_STATE_DATA, {\n    variables: { stateCode: selectedState },\n  });\n  const mapHandler = (event) => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n  if (data && data.usaMapData) {\n    return (\n      <div className=\"landing-page-container\">\n        <h1>GraphQL State Explorer National Map</h1>\n        <USAMap onClick={mapHandler} defaultFill=\"rgb(247, 166, 15)\" />\n      </div>\n    );\n  }\n};\n\nconst stateInfo = () => {\n  return (\n    <div className=\"landing-page-container\">\n      <h1>STATE INFORMATION</h1>\n      <ul>\n        <li key={data.usaMapData.id}>\n          <p>StateName: {data.usaMapData.name}</p>\n          <p>StateCode: {data.usaMapData.stateCode}</p>\n        </li>\n      </ul>\n      <div className=\"header-link-container\">\n        <Link to=\"/\" className=\"header-link\">\n          Back to State Selector\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAEzE,OAAO,aAAa;AAEpB,MAAMC,MAAM,GAAG,IAAIV,YAAY,CAAC;EAAEW,GAAG,EAAE;AAAwB,CAAC,CAAC;AAEjE,MAAMC,cAAc,GAAGT,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMU,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACEhB,KAAA,CAAAiB,aAAA,CAACP,MAAM;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLvB,KAAA,CAAAiB,aAAA,CAACN,MAAM;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACLvB,KAAA,CAAAiB,aAAA,CAACL,KAAK;IAACY,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEzB,KAAA,CAAAiB,aAAA,CAACS,OAAO;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxCvB,KAAA,CAAAiB,aAAA,CAACL,KAAK;IAACY,IAAI,EAAC,QAAQ;IAACC,OAAO,eAAEzB,KAAA,CAAAiB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAY,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxC,CACF,CAAC;AAEb,CAAC;AAED,MAAMG,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAE4B,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAG1B,QAAQ,CAACU,cAAc,EAAE;IACxDiB,SAAS,EAAE;MAAEC,SAAS,EAAEN;IAAc;EACxC,CAAC,CAAC;EACF,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMF,SAAS,GAAGE,KAAK,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI;IAC3CV,gBAAgB,CAACK,SAAS,CAAC;EAC7B,CAAC;EAED,IAAIJ,OAAO,EAAE,oBAAO7B,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAErC,IAAIO,KAAK,EAAE,oBAAO9B,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACO,KAAK,CAACS,OAAW,CAAC;EAC/C,IAAIR,IAAI,IAAIA,IAAI,CAACS,UAAU,EAAE;IAC3B,oBACExC,KAAA,CAAAiB,aAAA;MAAKwB,SAAS,EAAC,wBAAwB;MAAAvB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCvB,KAAA,CAAAiB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,qCAAuC,CAAC,eAC5CvB,KAAA,CAAAiB,aAAA,CAACV,MAAM;MAACmC,OAAO,EAAER,UAAW;MAACS,WAAW,EAAC,mBAAmB;MAAAzB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC3D,CAAC;EAEV;AACF,CAAC;AAED,MAAMqB,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACE5C,KAAA,CAAAiB,aAAA;IAAKwB,SAAS,EAAC,wBAAwB;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrCvB,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,mBAAqB,CAAC,eAC1BvB,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEvB,KAAA,CAAAiB,aAAA;IAAI4B,GAAG,EAAEd,IAAI,CAACS,UAAU,CAACM,EAAG;IAAA5B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BvB,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,aAAW,EAACQ,IAAI,CAACS,UAAU,CAACF,IAAQ,CAAC,eACxCtC,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,aAAW,EAACQ,IAAI,CAACS,UAAU,CAACP,SAAa,CAC1C,CACF,CAAC,eACLjC,KAAA,CAAAiB,aAAA;IAAKwB,SAAS,EAAC,uBAAuB;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpCvB,KAAA,CAAAiB,aAAA,CAACT,IAAI;IAACuC,EAAE,EAAC,GAAG;IAACN,SAAS,EAAC,aAAa;IAAAvB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAE/B,CACH,CACF,CAAC;AAEV,CAAC;AAEDrB,QAAQ,CAAC8C,MAAM,eACbhD,KAAA,CAAAiB,aAAA,CAACb,cAAc;EAACS,MAAM,EAAEA,MAAO;EAAAK,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC7BvB,KAAA,CAAAiB,aAAA,CAACD,GAAG;EAAAE,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CACQ,CAAC,EACjB0B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC"},"metadata":{},"sourceType":"module"}