{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js\";\n// import React from \"react\";\n// import { ApolloProvider } from \"@apollo/client\";\n// import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n// // import App from \"./App.js\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n//   cache: new InMemoryCache(),\n// });\n\n// const CApp = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <h1>hello</h1>\n//     </ApolloProvider>\n//   );\n// };\n\n// export default CApp;\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport \"./index.css\";\n\n// import App from \"./App.js\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\nconst GET_STATE_DATA = gql`\n  query GetStateData {\n    usaMapData(stateCode: \"AZ\") {\n      id\n      name\n    }\n  }\n`;\nfunction Map() {\n  // This function is required by imported USAMap\n  // mapHandler = (event) => {\n  // \tlet stateName = event.target.innerHTML\n  // \t\t.replace(\"<title>\", \"\")\n  // \t\t.replace(\"</title>\", \"\");\n  // \tnavigate(\"/parks\", {\n  // \t\tstate: { stateName: stateName, stateCode: event.target.dataset.name },\n  // \t});\n  // };\n  const mapHandler = event => {\n    alert(`StateName: ${event.target.innerHTML.replace(\"<title>\", \"\").replace(\"</title>\", \"\")} \n        <br/>\n        StateCode: ${event.target.dataset.name}`);\n  };\n  return (\n    /*#__PURE__*/\n    // This is a imported component that provides a clickable map of the United States\n    React.createElement(USAMap, {\n      onClick: mapHandler,\n      defaultFill: \"rgb(247, 166, 15)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    })\n  );\n}\nfunction CApp() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STATE_DATA);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Name: \", data.usaMapData.name))), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"names":["React","Component","ReactDOM","ApolloClient","ApolloProvider","useQuery","gql","USAMap","client","uri","GET_STATE_DATA","Map","mapHandler","event","alert","target","innerHTML","replace","dataset","name","createElement","onClick","defaultFill","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","CApp","loading","error","data","message","className","key","id","usaMapData","render","document","getElementById"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js"],"sourcesContent":["// import React from \"react\";\n// import { ApolloProvider } from \"@apollo/client\";\n// import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n// // import App from \"./App.js\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000/graphql\",\n//   cache: new InMemoryCache(),\n// });\n\n// const CApp = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <h1>hello</h1>\n//     </ApolloProvider>\n//   );\n// };\n\n// export default CApp;\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport \"./index.css\";\n\n// import App from \"./App.js\";\n\nconst client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData {\n    usaMapData(stateCode: \"AZ\") {\n      id\n      name\n    }\n  }\n`;\nfunction Map() {\n  // This function is required by imported USAMap\n  // mapHandler = (event) => {\n  // \tlet stateName = event.target.innerHTML\n  // \t\t.replace(\"<title>\", \"\")\n  // \t\t.replace(\"</title>\", \"\");\n  // \tnavigate(\"/parks\", {\n  // \t\tstate: { stateName: stateName, stateCode: event.target.dataset.name },\n  // \t});\n  // };\n  const mapHandler = (event) => {\n    alert(\n      `StateName: ${event.target.innerHTML\n        .replace(\"<title>\", \"\")\n        .replace(\"</title>\", \"\")} \n        <br/>\n        StateCode: ${event.target.dataset.name}`\n    );\n  };\n\n  return (\n    // This is a imported component that provides a clickable map of the United States\n    <USAMap onClick={mapHandler} defaultFill=\"rgb(247, 166, 15)\" />\n  );\n}\n\nfunction CApp() {\n  const { loading, error, data } = useQuery(GET_STATE_DATA);\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div className=\"landing-page-container\">\n      <h1>Users</h1>\n      <ul>\n        {/* {data.usaMapData.map((user) => ( */}\n        <li key={data.id}>\n          <p>Name: {data.usaMapData.name}</p>\n        </li>\n        {/* ))} */}\n      </ul>\n      <Map />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <CApp />\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAO,aAAa;;AAEpB;;AAEA,MAAMC,MAAM,GAAG,IAAIL,YAAY,CAAC;EAAEM,GAAG,EAAE;AAAwB,CAAC,CAAC;AAEjE,MAAMC,cAAc,GAAGJ,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,SAASK,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5BC,KAAK,CACF,cAAaD,KAAK,CAACE,MAAM,CAACC,SAAS,CACjCC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACtBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAE;AACjC;AACA,qBAAqBJ,KAAK,CAACE,MAAM,CAACG,OAAO,CAACC,IAAK,EAC3C,CAAC;EACH,CAAC;EAED;IAAA;IACE;IACAnB,KAAA,CAAAoB,aAAA,CAACb,MAAM;MAACc,OAAO,EAAET,UAAW;MAACU,WAAW,EAAC,mBAAmB;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE;EAAC;AAEnE;AAEA,SAASC,IAAIA,CAAA,EAAG;EACd,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAG3B,QAAQ,CAACK,cAAc,CAAC;EAEzD,IAAIoB,OAAO,EAAE,oBAAO9B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAErC,IAAIG,KAAK,EAAE,oBAAO/B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACG,KAAK,CAACE,OAAW,CAAC;EAC/C,oBACEjC,KAAA,CAAAoB,aAAA;IAAKc,SAAS,EAAC,wBAAwB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrC5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC,eACd5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEE5B,KAAA,CAAAoB,aAAA;IAAIe,GAAG,EAAEH,IAAI,CAACI,EAAG;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACf5B,KAAA,CAAAoB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,EAACI,IAAI,CAACK,UAAU,CAAClB,IAAQ,CAChC,CAEF,CAAC,eACLnB,KAAA,CAAAoB,aAAA,CAACT,GAAG;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACH,CAAC;AAEV;AAEA1B,QAAQ,CAACoC,MAAM,eACbtC,KAAA,CAAAoB,aAAA,CAAChB,cAAc;EAACI,MAAM,EAAEA,MAAO;EAAAe,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC7B5B,KAAA,CAAAoB,aAAA,CAACS,IAAI;EAAAN,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CACO,CAAC,EAEjBW,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC"},"metadata":{},"sourceType":"module"}