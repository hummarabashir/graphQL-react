{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import Landing from \"./component/Landing/Landing\";\n// import StateInfo from \"./component/State/StateInfo\";\n// // import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <React.StrictMode>\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Landing />} />\n//           <Route path=\"/state\" element={<StateInfo />} />\n//         </Routes>\n//       </Router>\n//     </ApolloProvider>\n//   </React.StrictMode>\n// );\n\n// App.js\n\nimport React from \"react\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache()\n});\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\nfunction App() {\n  // const { loading, error, data } = useQuery(GET_VENUES, {\n  //   variables: { region: \"New York\" },\n  //   // Replace 'New York' with the desired region variable\n  // });\n\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error: {error.message}</p>;\n\n  // return (\n  //   <div>\n  //     <h1>Venues</h1>\n  //     {data.results.map((venue) => (\n  //       <div key={venue.fsq_id}>\n  //         <h3>{venue.name}</h3>\n  //         <p>{venue.location.address}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, \"Hello\");\n}\n\n// function AppWithApollo() {\n//   return (\n//     <ApolloProvider client={client}>\n//       <App />\n//     </ApolloProvider>\n//   );\n// }\n\nexport default App;","map":{"version":3,"names":["React","InMemoryCache","ApolloClient","ApolloProvider","useQuery","gql","client","uri","cache","GET_VENUES","App","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js"],"sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import Landing from \"./component/Landing/Landing\";\n// import StateInfo from \"./component/State/StateInfo\";\n// // import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <React.StrictMode>\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Landing />} />\n//           <Route path=\"/state\" element={<StateInfo />} />\n//         </Routes>\n//       </Router>\n//     </ApolloProvider>\n//   </React.StrictMode>\n// );\n\n// App.js\n\nimport React from \"react\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache(),\n});\n\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\n\nfunction App() {\n  // const { loading, error, data } = useQuery(GET_VENUES, {\n  //   variables: { region: \"New York\" },\n  //   // Replace 'New York' with the desired region variable\n  // });\n\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>Error: {error.message}</p>;\n\n  // return (\n  //   <div>\n  //     <h1>Venues</h1>\n  //     {data.results.map((venue) => (\n  //       <div key={venue.fsq_id}>\n  //         <h3>{venue.name}</h3>\n  //         <p>{venue.location.address}</p>\n  //       </div>\n  //     ))}\n  //   </div>\n  // );\n  return <h1>Hello</h1>;\n}\n\n// function AppWithApollo() {\n//   return (\n//     <ApolloProvider client={client}>\n//       <App />\n//     </ApolloProvider>\n//   );\n// }\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAE7B,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,GAAG,EAAE,uBAAuB;EAC5BC,KAAK,EAAE,IAAIP,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMQ,UAAU,GAAGJ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASK,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAOV,KAAA,CAAAW,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,OAAS,CAAC;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,GAAG"},"metadata":{},"sourceType":"module"}