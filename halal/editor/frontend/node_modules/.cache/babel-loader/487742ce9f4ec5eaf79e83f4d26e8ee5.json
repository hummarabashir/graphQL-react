{"ast":null,"code":"import * as React from 'react';\nimport { SSRContext, createSSRManager } from './internal/SSRContext';\nimport { isPromiseLike } from './utils';\nexport function getMarkupFromTree(_ref) {\n  var tree = _ref.tree,\n    onBeforeRender = _ref.onBeforeRender,\n    renderFunction = _ref.renderFunction;\n  var ssrManager = createSSRManager();\n  function process() {\n    try {\n      if (onBeforeRender) {\n        onBeforeRender();\n      }\n      var html = renderFunction(React.createElement(SSRContext.Provider, {\n        value: ssrManager\n      }, tree));\n      if (!ssrManager.hasPromises()) {\n        return html;\n      }\n    } catch (e) {\n      if (!isPromiseLike(e)) {\n        throw e;\n      }\n      ssrManager.register(e);\n    }\n    return ssrManager.consumeAndAwaitPromises().then(process);\n  }\n  return Promise.resolve().then(process);\n}","map":{"version":3,"names":["React","SSRContext","createSSRManager","isPromiseLike","getMarkupFromTree","_ref","tree","onBeforeRender","renderFunction","ssrManager","process","html","createElement","Provider","value","hasPromises","e","register","consumeAndAwaitPromises","then","Promise","resolve"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/node_modules/react-apollo-hooks/es/getMarkupFromTree.js"],"sourcesContent":["import * as React from 'react';\nimport { SSRContext, createSSRManager } from './internal/SSRContext';\nimport { isPromiseLike } from './utils';\nexport function getMarkupFromTree(_ref) {\n  var tree = _ref.tree,\n      onBeforeRender = _ref.onBeforeRender,\n      renderFunction = _ref.renderFunction;\n  var ssrManager = createSSRManager();\n\n  function process() {\n    try {\n      if (onBeforeRender) {\n        onBeforeRender();\n      }\n\n      var html = renderFunction(React.createElement(SSRContext.Provider, {\n        value: ssrManager\n      }, tree));\n\n      if (!ssrManager.hasPromises()) {\n        return html;\n      }\n    } catch (e) {\n      if (!isPromiseLike(e)) {\n        throw e;\n      }\n\n      ssrManager.register(e);\n    }\n\n    return ssrManager.consumeAndAwaitPromises().then(process);\n  }\n\n  return Promise.resolve().then(process);\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,uBAAuB;AACpE,SAASC,aAAa,QAAQ,SAAS;AACvC,OAAO,SAASC,iBAAiBA,CAACC,IAAI,EAAE;EACtC,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAChBC,cAAc,GAAGF,IAAI,CAACE,cAAc;IACpCC,cAAc,GAAGH,IAAI,CAACG,cAAc;EACxC,IAAIC,UAAU,GAAGP,gBAAgB,CAAC,CAAC;EAEnC,SAASQ,OAAOA,CAAA,EAAG;IACjB,IAAI;MACF,IAAIH,cAAc,EAAE;QAClBA,cAAc,CAAC,CAAC;MAClB;MAEA,IAAII,IAAI,GAAGH,cAAc,CAACR,KAAK,CAACY,aAAa,CAACX,UAAU,CAACY,QAAQ,EAAE;QACjEC,KAAK,EAAEL;MACT,CAAC,EAAEH,IAAI,CAAC,CAAC;MAET,IAAI,CAACG,UAAU,CAACM,WAAW,CAAC,CAAC,EAAE;QAC7B,OAAOJ,IAAI;MACb;IACF,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,IAAI,CAACb,aAAa,CAACa,CAAC,CAAC,EAAE;QACrB,MAAMA,CAAC;MACT;MAEAP,UAAU,CAACQ,QAAQ,CAACD,CAAC,CAAC;IACxB;IAEA,OAAOP,UAAU,CAACS,uBAAuB,CAAC,CAAC,CAACC,IAAI,CAACT,OAAO,CAAC;EAC3D;EAEA,OAAOU,OAAO,CAACC,OAAO,CAAC,CAAC,CAACF,IAAI,CAACT,OAAO,CAAC;AACxC"},"metadata":{},"sourceType":"module"}