{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js\";\n// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import Landing from \"./component/Landing/Landing\";\n// import StateInfo from \"./component/State/StateInfo\";\n// // import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <React.StrictMode>\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Landing />} />\n//           <Route path=\"/state\" element={<StateInfo />} />\n//         </Routes>\n//       </Router>\n//     </ApolloProvider>\n//   </React.StrictMode>\n// );\n\n// App.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache()\n});\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VENUES, {\n    variables: {\n      region: \"Texas\"\n    }\n    // Replace 'New York' with the desired region variable\n  });\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Venues\"), data.venues.map(venue => /*#__PURE__*/React.createElement(\"div\", {\n    key: venue.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, venue.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, venue.location.address))));\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }\n})));\n\n// export default AppWithApollo;","map":{"version":3,"names":["React","ReactDOM","InMemoryCache","ApolloClient","ApolloProvider","useQuery","gql","client","uri","cache","GET_VENUES","App","loading","error","data","variables","region","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","venues","map","venue","key","id","name","location","address","root","createRoot","document","getElementById","render"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js"],"sourcesContent":["// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import Landing from \"./component/Landing/Landing\";\n// import StateInfo from \"./component/State/StateInfo\";\n// // import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <React.StrictMode>\n//     <ApolloProvider client={client}>\n//       <Router>\n//         <Routes>\n//           <Route path=\"/\" element={<Landing />} />\n//           <Route path=\"/state\" element={<StateInfo />} />\n//         </Routes>\n//       </Router>\n//     </ApolloProvider>\n//   </React.StrictMode>\n// );\n\n// App.js\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache(),\n});\n\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_VENUES, {\n    variables: { region: \"Texas\" },\n    // Replace 'New York' with the desired region variable\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div>\n      <h1>Venues</h1>\n      {data.venues.map((venue) => (\n        <div key={venue.id}>\n          <h3>{venue.name}</h3>\n          <p>{venue.location.address}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\n// export default AppWithApollo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}