{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport Landing from \"./pages/LandingPage/LandingPage\";\nimport StateInfo from \"./pages/StatePage/StatePage\";\n// import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache()\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Routes, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Route, {\n  path: \"/\",\n  element: /*#__PURE__*/React.createElement(Landing, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 36\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  path: \"/state\",\n  element: /*#__PURE__*/React.createElement(StateInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }\n}))))));\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { InMemoryCache } from \"@apollo/client\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import { useQuery } from \"react-apollo-hooks\";\n// import gql from \"graphql-tag\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000\",\n//   cache: new InMemoryCache(),\n// });\n\n// const GET_VENUES = gql`\n//   query GetVenues($region: String!) {\n//     venues(region: $region) {\n//       id\n//       name\n//       location\n//     }\n//   }\n// `;\n\n// function App() {\n//   const { loading, error, data } = useQuery(GET_VENUES, {\n//     variables: { region: \"Texas\" },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error: {error.message}</p>;\n\n//   return (\n//     <div>\n//       <h1>Venues</h1>\n//       {data.venues.map((venue) => (\n//         <div key={venue.id}>\n//           <h3>{venue.name}</h3>\n//           <p>{venue.location.address}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <ApolloProvider client={client}>\n//     <App />\n//   </ApolloProvider>\n// );","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Router","Routes","Route","InMemoryCache","ApolloClient","ApolloProvider","Landing","StateInfo","client","uri","cache","root","createRoot","document","getElementById","render","createElement","StrictMode","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","path","element"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { InMemoryCache } from \"@apollo/client\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport Landing from \"./pages/LandingPage/LandingPage\";\nimport StateInfo from \"./pages/StatePage/StatePage\";\n// import \"./index.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\",\n  cache: new InMemoryCache(),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/state\" element={<StateInfo />} />\n        </Routes>\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>\n);\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom/client\";\n// import { InMemoryCache } from \"@apollo/client\";\n// import ApolloClient from \"apollo-boost\";\n// import { ApolloProvider } from \"react-apollo-hooks\";\n// import { useQuery } from \"react-apollo-hooks\";\n// import gql from \"graphql-tag\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:4000\",\n//   cache: new InMemoryCache(),\n// });\n\n// const GET_VENUES = gql`\n//   query GetVenues($region: String!) {\n//     venues(region: $region) {\n//       id\n//       name\n//       location\n//     }\n//   }\n// `;\n\n// function App() {\n//   const { loading, error, data } = useQuery(GET_VENUES, {\n//     variables: { region: \"Texas\" },\n//   });\n\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error: {error.message}</p>;\n\n//   return (\n//     <div>\n//       <h1>Venues</h1>\n//       {data.venues.map((venue) => (\n//         <div key={venue.id}>\n//           <h3>{venue.name}</h3>\n//           <p>{venue.location.address}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <ApolloProvider client={client}>\n//     <App />\n//   </ApolloProvider>\n// );\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,SAAS,MAAM,6BAA6B;AACnD;;AAEA;;AAEA,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,GAAG,EAAE,uBAAuB;EAC5BC,KAAK,EAAE,IAAIP,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMQ,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTlB,KAAA,CAAAmB,aAAA,CAACnB,KAAK,CAACoB,UAAU;EAAAC,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACf1B,KAAA,CAAAmB,aAAA,CAACX,cAAc;EAACG,MAAM,EAAEA,MAAO;EAAAU,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC7B1B,KAAA,CAAAmB,aAAA,CAAChB,MAAM;EAAAkB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACL1B,KAAA,CAAAmB,aAAA,CAACf,MAAM;EAAAiB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBACL1B,KAAA,CAAAmB,aAAA,CAACd,KAAK;EAACsB,IAAI,EAAC,GAAG;EAACC,OAAO,eAAE5B,KAAA,CAAAmB,aAAA,CAACV,OAAO;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAE;EAAAL,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CAAC,eACxC1B,KAAA,CAAAmB,aAAA,CAACd,KAAK;EAACsB,IAAI,EAAC,QAAQ;EAACC,OAAO,eAAE5B,KAAA,CAAAmB,aAAA,CAACT,SAAS;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAE;EAAAL,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CACxC,CACF,CACM,CACA,CACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}