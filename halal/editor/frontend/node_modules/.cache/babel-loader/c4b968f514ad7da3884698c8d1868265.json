{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/Landing.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./index.css\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\nfunction CApp() {\n  const [selectedState, setSelectedState] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STATE_DATA, {\n    variables: {\n      stateCode: selectedState\n    }\n  });\n  const mapHandler = event => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (data && data.usaMapData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"STATE INFORMATION\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      key: data.usaMapData.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"StateName: \", data.usaMapData.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"StateCode: \", data.usaMapData.stateCode))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-link-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"header-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Back to State Selector\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"GraphQL State Explorer National Map\"), /*#__PURE__*/React.createElement(USAMap, {\n      onClick: mapHandler,\n      defaultFill: \"rgb(247, 166, 15)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"names":["React","useState","ReactDOM","ApolloClient","ApolloProvider","useQuery","gql","USAMap","Link","BrowserRouter","Router","Switch","Route","client","uri","GET_STATE_DATA","CApp","selectedState","setSelectedState","loading","error","data","variables","stateCode","mapHandler","event","target","dataset","name","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","usaMapData","className","key","id","to","onClick","defaultFill","render","document","getElementById"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/Landing.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nconst client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n      stateCode\n    }\n  }\n`;\n\nfunction CApp() {\n  const [selectedState, setSelectedState] = useState(\"\");\n  const { loading, error, data } = useQuery(GET_STATE_DATA, {\n    variables: { stateCode: selectedState },\n  });\n  const mapHandler = (event) => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n  if (data && data.usaMapData) {\n    return (\n      <div className=\"landing-page-container\">\n        <h1>STATE INFORMATION</h1>\n        <ul>\n          <li key={data.usaMapData.id}>\n            <p>StateName: {data.usaMapData.name}</p>\n            <p>StateCode: {data.usaMapData.stateCode}</p>\n          </li>\n        </ul>\n        <div className=\"header-link-container\">\n          <Link to=\"/\" className=\"header-link\">\n            Back to State Selector\n          </Link>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"landing-page-container\">\n        <h1>GraphQL State Explorer National Map</h1>\n        <USAMap onClick={mapHandler} defaultFill=\"rgb(247, 166, 15)\" />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <CApp />\n  </ApolloProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,YAAY,MAAM,cAAc;AACvC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAEzE,OAAO,aAAa;AAEpB,MAAMC,MAAM,GAAG,IAAIV,YAAY,CAAC;EAAEW,GAAG,EAAE;AAAwB,CAAC,CAAC;AAEjE,MAAMC,cAAc,GAAGT,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASU,IAAIA,CAAA,EAAG;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM;IAAEkB,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGhB,QAAQ,CAACU,cAAc,EAAE;IACxDO,SAAS,EAAE;MAAEC,SAAS,EAAEN;IAAc;EACxC,CAAC,CAAC;EACF,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMF,SAAS,GAAGE,KAAK,CAACC,MAAM,CAACC,OAAO,CAACC,IAAI;IAC3CV,gBAAgB,CAACK,SAAS,CAAC;EAC7B,CAAC;EAED,IAAIJ,OAAO,EAAE,oBAAOnB,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAErC,IAAIf,KAAK,EAAE,oBAAOpB,KAAA,CAAA6B,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACf,KAAK,CAACgB,OAAW,CAAC;EAC/C,IAAIf,IAAI,IAAIA,IAAI,CAACgB,UAAU,EAAE;IAC3B,oBACErC,KAAA,CAAA6B,aAAA;MAAKS,SAAS,EAAC,wBAAwB;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCnC,KAAA,CAAA6B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,mBAAqB,CAAC,eAC1BnC,KAAA,CAAA6B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACEnC,KAAA,CAAA6B,aAAA;MAAIU,GAAG,EAAElB,IAAI,CAACgB,UAAU,CAACG,EAAG;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1BnC,KAAA,CAAA6B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,aAAW,EAACd,IAAI,CAACgB,UAAU,CAACT,IAAQ,CAAC,eACxC5B,KAAA,CAAA6B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAG,aAAW,EAACd,IAAI,CAACgB,UAAU,CAACd,SAAa,CAC1C,CACF,CAAC,eACLvB,KAAA,CAAA6B,aAAA;MAAKS,SAAS,EAAC,uBAAuB;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpCnC,KAAA,CAAA6B,aAAA,CAACrB,IAAI;MAACiC,EAAE,EAAC,GAAG;MAACH,SAAS,EAAC,aAAa;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,wBAE/B,CACH,CACF,CAAC;EAEV,CAAC,MAAM;IACL,oBACEnC,KAAA,CAAA6B,aAAA;MAAKS,SAAS,EAAC,wBAAwB;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrCnC,KAAA,CAAA6B,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,qCAAuC,CAAC,eAC5CnC,KAAA,CAAA6B,aAAA,CAACtB,MAAM;MAACmC,OAAO,EAAElB,UAAW;MAACmB,WAAW,EAAC,mBAAmB;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAC3D,CAAC;EAEV;AACF;AAEAjC,QAAQ,CAAC0C,MAAM,eACb5C,KAAA,CAAA6B,aAAA,CAACzB,cAAc;EAACS,MAAM,EAAEA,MAAO;EAAAiB,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,gBAC7BnC,KAAA,CAAA6B,aAAA,CAACb,IAAI;EAAAc,MAAA;EAAAC,QAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAA,CAAE,CACO,CAAC,EAEjBU,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC"},"metadata":{},"sourceType":"module"}