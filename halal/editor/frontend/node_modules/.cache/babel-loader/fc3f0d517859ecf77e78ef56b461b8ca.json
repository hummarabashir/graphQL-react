{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { ApolloError } from 'apollo-client';\nimport React from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport actHack from './internal/actHack';\nimport { objToKey } from './utils';\nvar getInitialState = function getInitialState() {\n  return {\n    called: false,\n    data: undefined,\n    error: undefined,\n    hasError: false,\n    loading: false\n  };\n};\nexport function useMutation(mutation, baseOptions) {\n  if (baseOptions === void 0) {\n    baseOptions = {};\n  }\n  var client = useApolloClient(baseOptions.client);\n  var _React$useState = React.useState(getInitialState),\n    result = _React$useState[0],\n    setResult = _React$useState[1];\n  var _baseOptions = baseOptions,\n    _baseOptions$rethrow = _baseOptions.rethrow,\n    rethrow = _baseOptions$rethrow === void 0 ? true : _baseOptions$rethrow,\n    options = _objectWithoutPropertiesLoose(_baseOptions, [\"rethrow\"]);\n  var mergeResult = function mergeResult(partialResult) {\n    // A hack to get rid React warnings during tests.\n    actHack(function () {\n      setResult(function (prev) {\n        return _extends({}, prev, {}, partialResult);\n      });\n    });\n  }; // reset state if client instance changes\n\n  React.useEffect(function () {\n    mergeResult(getInitialState());\n  }, [client]);\n  var _useMutationTracking = useMutationTracking(),\n    generateNewMutationId = _useMutationTracking.generateNewMutationId,\n    isMostRecentMutation = _useMutationTracking.isMostRecentMutation;\n  var onMutationStart = function onMutationStart() {\n    if (!result.loading) {\n      mergeResult({\n        called: true,\n        data: undefined,\n        error: undefined,\n        hasError: false,\n        loading: true\n      });\n    }\n  };\n  var onMutationError = function onMutationError(error, mutationId) {\n    if (isMostRecentMutation(mutationId)) {\n      mergeResult({\n        error: error,\n        hasError: true,\n        loading: false\n      });\n    }\n  };\n  var onMutationCompleted = function onMutationCompleted(response, mutationId) {\n    var data = response.data,\n      errors = response.errors;\n    if (errors && errors.length > 0) {\n      onMutationError(new ApolloError({\n        graphQLErrors: errors\n      }), mutationId);\n      return;\n    }\n    if (isMostRecentMutation(mutationId)) {\n      mergeResult({\n        data: data,\n        loading: false\n      });\n    }\n  };\n  var runMutation = React.useCallback(function (mutateOptions) {\n    if (mutateOptions === void 0) {\n      mutateOptions = {};\n    }\n    return new Promise(function (resolve, reject) {\n      onMutationStart();\n      var mutationId = generateNewMutationId(); // merge together variables from baseOptions (if specified)\n      // and the execution\n\n      var mutateVariables = options.variables ? _extends({}, mutateOptions.variables, {}, options.variables) : mutateOptions.variables;\n      client.mutate(_extends({\n        mutation: mutation\n      }, options, {}, mutateOptions, {\n        variables: mutateVariables\n      })).then(function (response) {\n        onMutationCompleted(response, mutationId);\n        resolve(response);\n      })[\"catch\"](function (err) {\n        onMutationError(err, mutationId);\n        if (rethrow) {\n          reject(err);\n          return;\n        }\n        resolve({});\n      });\n    });\n  }, [client, mutation, objToKey(baseOptions)]);\n  return [runMutation, result];\n}\nfunction useMutationTracking() {\n  var mostRecentMutationId = React.useRef(0);\n  var generateNewMutationId = function generateNewMutationId() {\n    mostRecentMutationId.current += 1;\n    return mostRecentMutationId.current;\n  };\n  var isMostRecentMutation = function isMostRecentMutation(mutationId) {\n    return mostRecentMutationId.current === mutationId;\n  };\n  return {\n    generateNewMutationId: generateNewMutationId,\n    isMostRecentMutation: isMostRecentMutation\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","ApolloError","React","useApolloClient","actHack","objToKey","getInitialState","called","data","undefined","error","hasError","loading","useMutation","mutation","baseOptions","client","_React$useState","useState","result","setResult","_baseOptions","_baseOptions$rethrow","rethrow","options","mergeResult","partialResult","prev","useEffect","_useMutationTracking","useMutationTracking","generateNewMutationId","isMostRecentMutation","onMutationStart","onMutationError","mutationId","onMutationCompleted","response","errors","graphQLErrors","runMutation","useCallback","mutateOptions","Promise","resolve","reject","mutateVariables","variables","mutate","then","err","mostRecentMutationId","useRef","current"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/halal/node_modules/react-apollo-hooks/es/useMutation.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ApolloError } from 'apollo-client';\nimport React from 'react';\nimport { useApolloClient } from './ApolloContext';\nimport actHack from './internal/actHack';\nimport { objToKey } from './utils';\n\nvar getInitialState = function getInitialState() {\n  return {\n    called: false,\n    data: undefined,\n    error: undefined,\n    hasError: false,\n    loading: false\n  };\n};\n\nexport function useMutation(mutation, baseOptions) {\n  if (baseOptions === void 0) {\n    baseOptions = {};\n  }\n\n  var client = useApolloClient(baseOptions.client);\n\n  var _React$useState = React.useState(getInitialState),\n      result = _React$useState[0],\n      setResult = _React$useState[1];\n\n  var _baseOptions = baseOptions,\n      _baseOptions$rethrow = _baseOptions.rethrow,\n      rethrow = _baseOptions$rethrow === void 0 ? true : _baseOptions$rethrow,\n      options = _objectWithoutPropertiesLoose(_baseOptions, [\"rethrow\"]);\n\n  var mergeResult = function mergeResult(partialResult) {\n    // A hack to get rid React warnings during tests.\n    actHack(function () {\n      setResult(function (prev) {\n        return _extends({}, prev, {}, partialResult);\n      });\n    });\n  }; // reset state if client instance changes\n\n\n  React.useEffect(function () {\n    mergeResult(getInitialState());\n  }, [client]);\n\n  var _useMutationTracking = useMutationTracking(),\n      generateNewMutationId = _useMutationTracking.generateNewMutationId,\n      isMostRecentMutation = _useMutationTracking.isMostRecentMutation;\n\n  var onMutationStart = function onMutationStart() {\n    if (!result.loading) {\n      mergeResult({\n        called: true,\n        data: undefined,\n        error: undefined,\n        hasError: false,\n        loading: true\n      });\n    }\n  };\n\n  var onMutationError = function onMutationError(error, mutationId) {\n    if (isMostRecentMutation(mutationId)) {\n      mergeResult({\n        error: error,\n        hasError: true,\n        loading: false\n      });\n    }\n  };\n\n  var onMutationCompleted = function onMutationCompleted(response, mutationId) {\n    var data = response.data,\n        errors = response.errors;\n\n    if (errors && errors.length > 0) {\n      onMutationError(new ApolloError({\n        graphQLErrors: errors\n      }), mutationId);\n      return;\n    }\n\n    if (isMostRecentMutation(mutationId)) {\n      mergeResult({\n        data: data,\n        loading: false\n      });\n    }\n  };\n\n  var runMutation = React.useCallback(function (mutateOptions) {\n    if (mutateOptions === void 0) {\n      mutateOptions = {};\n    }\n\n    return new Promise(function (resolve, reject) {\n      onMutationStart();\n      var mutationId = generateNewMutationId(); // merge together variables from baseOptions (if specified)\n      // and the execution\n\n      var mutateVariables = options.variables ? _extends({}, mutateOptions.variables, {}, options.variables) : mutateOptions.variables;\n      client.mutate(_extends({\n        mutation: mutation\n      }, options, {}, mutateOptions, {\n        variables: mutateVariables\n      })).then(function (response) {\n        onMutationCompleted(response, mutationId);\n        resolve(response);\n      })[\"catch\"](function (err) {\n        onMutationError(err, mutationId);\n\n        if (rethrow) {\n          reject(err);\n          return;\n        }\n\n        resolve({});\n      });\n    });\n  }, [client, mutation, objToKey(baseOptions)]);\n  return [runMutation, result];\n}\n\nfunction useMutationTracking() {\n  var mostRecentMutationId = React.useRef(0);\n\n  var generateNewMutationId = function generateNewMutationId() {\n    mostRecentMutationId.current += 1;\n    return mostRecentMutationId.current;\n  };\n\n  var isMostRecentMutation = function isMostRecentMutation(mutationId) {\n    return mostRecentMutationId.current === mutationId;\n  };\n\n  return {\n    generateNewMutationId: generateNewMutationId,\n    isMostRecentMutation: isMostRecentMutation\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}