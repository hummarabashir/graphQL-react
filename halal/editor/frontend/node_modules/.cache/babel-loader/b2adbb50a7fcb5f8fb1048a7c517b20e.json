{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/component/State/StateInfo.js\";\nimport React from \"react\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./state.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const GET_STATE_DATA = gql`\n//   query GetStateData($stateCode: String!) {\n//     usaMapData(stateCode: $stateCode) {\n//       id\n//       name\n//       stateCode\n//     }\n//   }\n// `;\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\nconst StateInfo = () => {\n  const location = useLocation();\n  const stateCode = location.state.stateCode;\n\n  //   return <h1>{stateCode}</h1>;\n  // const [selectedState, setSelectedState] = useState(\"\");\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VENUES, {\n    variables: {\n      stateCode: stateCode\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (data && data.usaMapData) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"parks-page-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"state-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, location.state.stateCode === \"DC\" ? \"Washington, D.C.\" : location.state.stateName));\n  }\n};\nexport default StateInfo;","map":{"version":3,"names":["React","useQuery","gql","useLocation","Link","GET_VENUES","StateInfo","location","stateCode","state","loading","error","data","variables","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","message","usaMapData","className","Header","stateName"],"sources":["/Users/hummarabashir/Desktop/graphql-react-explorer/halal/editor/frontend/src/component/State/StateInfo.js"],"sourcesContent":["import React from \"react\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Link } from \"react-router-dom\";\n\nimport \"./state.css\";\n\n// const client = new ApolloClient({ uri: \"http://localhost:4000\" });\n\n// const GET_STATE_DATA = gql`\n//   query GetStateData($stateCode: String!) {\n//     usaMapData(stateCode: $stateCode) {\n//       id\n//       name\n//       stateCode\n//     }\n//   }\n// `;\nconst GET_VENUES = gql`\n  query GetVenues($region: String!) {\n    venues(region: $region) {\n      id\n      name\n      location\n    }\n  }\n`;\n\nconst StateInfo = () => {\n  const location = useLocation();\n  const stateCode = location.state.stateCode;\n\n  //   return <h1>{stateCode}</h1>;\n  // const [selectedState, setSelectedState] = useState(\"\");\n  const { loading, error, data } = useQuery(GET_VENUES, {\n    variables: { stateCode: stateCode },\n  });\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n  if (data && data.usaMapData) {\n    return (\n      <div className=\"parks-page-container\">\n        <Header />\n        <h1 className=\"state-name\">\n          {location.state.stateCode === \"DC\"\n            ? \"Washington, D.C.\"\n            : location.state.stateName}\n        </h1>\n      </div>\n    );\n  }\n};\n\nexport default StateInfo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,aAAa;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGH,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMI,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAMK,SAAS,GAAGD,QAAQ,CAACE,KAAK,CAACD,SAAS;;EAE1C;EACA;EACA,MAAM;IAAEE,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAACI,UAAU,EAAE;IACpDQ,SAAS,EAAE;MAAEL,SAAS,EAAEA;IAAU;EACpC,CAAC,CAAC;EACF,IAAIE,OAAO,EAAE,oBAAOV,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAErC,IAAIT,KAAK,EAAE,oBAAOX,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACT,KAAK,CAACU,OAAW,CAAC;EAC/C,IAAIT,IAAI,IAAIA,IAAI,CAACU,UAAU,EAAE;IAC3B,oBACEtB,KAAA,CAAAc,aAAA;MAAKS,SAAS,EAAC,sBAAsB;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACnCpB,KAAA,CAAAc,aAAA,CAACU,MAAM;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC,eACVpB,KAAA,CAAAc,aAAA;MAAIS,SAAS,EAAC,YAAY;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACvBb,QAAQ,CAACE,KAAK,CAACD,SAAS,KAAK,IAAI,GAC9B,kBAAkB,GAClBD,QAAQ,CAACE,KAAK,CAACgB,SACjB,CACD,CAAC;EAEV;AACF,CAAC;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module"}