{"ast":null,"code":"var _jsxFileName = \"/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport \"./index.css\";\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000\"\n});\nconst [selectedState, setSelectedState] = useState(\"\");\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n    }\n  }\n`;\nfunction Map() {\n  const mapHandler = event => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n  return /*#__PURE__*/React.createElement(USAMap, {\n    onClick: mapHandler,\n    defaultFill: \"rgb(247, 166, 15)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  });\n}\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STATE_DATA, {\n    variables: {\n      stateCode: selectedState\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: data.usaMapData.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Name: \", data.usaMapData.name))), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"names":["React","useState","ReactDOM","ApolloClient","ApolloProvider","useQuery","gql","USAMap","client","uri","selectedState","setSelectedState","GET_STATE_DATA","Map","mapHandler","event","stateCode","target","dataset","name","createElement","onClick","defaultFill","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","App","loading","error","data","variables","message","className","key","usaMapData","id","render","document","getElementById"],"sources":["/Users/hummarabashir/Desktop/national-park/editor/frontend/src/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport gql from \"graphql-tag\";\nimport USAMap from \"react-usa-map\";\nimport \"./index.css\";\n\nconst client = new ApolloClient({ uri: \"http://localhost:4000\" });\nconst [selectedState, setSelectedState] = useState(\"\");\n\nconst GET_STATE_DATA = gql`\n  query GetStateData($stateCode: String!) {\n    usaMapData(stateCode: $stateCode) {\n      id\n      name\n    }\n  }\n`;\n\nfunction Map() {\n  const mapHandler = (event) => {\n    const stateCode = event.target.dataset.name;\n    setSelectedState(stateCode);\n  };\n\n  return <USAMap onClick={mapHandler} defaultFill=\"rgb(247, 166, 15)\" />;\n}\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_STATE_DATA, {\n    variables: { stateCode: selectedState },\n  });\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  return (\n    <div className=\"landing-page-container\">\n      <h1>Users</h1>\n      <ul>\n        <li key={data.usaMapData.id}>\n          <p>Name: {data.usaMapData.name}</p>\n        </li>\n      </ul>\n      <Map />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}